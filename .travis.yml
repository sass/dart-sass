## Testing

# Set the language to Ruby so that we can run sass-spec tests.
language: ruby
env:
# Language specs, defined in sass/sass-spec
- TASK=specs   DART_CHANNEL=dev    DART_VERSION=latest
- TASK=specs   DART_CHANNEL=stable DART_VERSION=latest
- TASK=specs   DART_CHANNEL=stable DART_VERSION=latest ASYNC=true

# Unit tests, defined in test/.
- TASK=tests   DART_CHANNEL=dev    DART_VERSION=latest
- TASK=tests   DART_CHANNEL=stable DART_VERSION=latest
- TASK=tests   DART_CHANNEL=dev    DART_VERSION=latest NODE_VERSION=stable
- TASK=tests   DART_CHANNEL=dev    DART_VERSION=latest NODE_VERSION=v6.9.1
- TASK=tests   DART_CHANNEL=dev    DART_VERSION=latest NODE_VERSION=v4.6.2

# Miscellaneous checks.
- TASK=analyze DART_CHANNEL=dev    DART_VERSION=latest
- TASK=format  DART_CHANNEL=dev    DART_VERSION=latest

rvm:
- 2.3.1

# Only building master means that we don't run two builds for each pull request.
branches:
  only: [master, /^feature\..*/]

cache:
  directories:
  - $HOME/.pub-cache

install:
- bold=$(tput bold)
- none=$(tput sgr0)

# Install the Dart SDK.
- curl -o dart.zip "https://storage.googleapis.com/dart-archive/channels/$DART_CHANNEL/release/$DART_VERSION/sdk/dartsdk-linux-x64-release.zip"
- unzip dart.zip
- export PATH="$PATH:`pwd`/dart-sdk/bin"
- pub get

# Install the Node SDK if we're running Node tests.
- if-node() { if [ ! -z "$NODE_VERSION" ]; then "$@"; fi }
- if-node . "$HOME/.nvm/nvm.sh"
- if-node nvm install "$NODE_VERSION"
- if-node nvm use "$NODE_VERSION"
- SASS_MINIFY_JS=false if-node pub run grinder before_test

# Download sass-spec and install its dependencies if we're running specs.
- if-specs() { if [ "$TASK" = specs ]; then "$@"; fi }
- if-specs export sass_spec_ref=`tool/sass-spec-ref.sh`
- if-specs git init sass-spec
- if-specs git -C sass-spec fetch git://github.com/sass/sass-spec "$sass_spec_ref" --depth 1
- if-specs git -C sass-spec checkout FETCH_HEAD
- if-specs bundle install --gemfile=sass-spec/Gemfile --jobs=3 --retry=3

script:
- if [ "$TASK" = analyze ]; then
    echo "${bold}Analzing Dart code.$none";
    dartanalyzer --fatal-warnings lib/ test/ tool/;
  elif [ "$TASK" = format ]; then
    echo "${bold}Ensuring Dart code is formatted.$none";
    ./tool/assert-formatted.sh;
  elif [ "$TASK" = tests ]; then
    if [ -z "$NODE_VERSION" ]; then
      echo "${bold}Running Dart tests against $(dart --version &> /dev/stdout).$none";
      if [ "$DART_CHANNEL" = dev ]; then
        pub run test -p vm -x node;
      else
        pub run test -p vm -x dart2 -x node;
      fi
    else
      echo "${bold}Running Node tests against Node $(node --version).$none";
      if [ "$DART_CHANNEL" = dev ]; then
        pub run test -j 2 -t node;
      else
        pub run test -j 2 -x dart2 -t node;
      fi
    fi;
  else
    echo "${bold}Running sass-spec against $(dart --version &> /dev/stdout).$none";
    if [ "$ASYNC" = true ]; then
      extra_args=--dart-args --async;
    fi;
    (cd sass-spec; bundle exec sass-spec.rb --dart .. $extra_args);
  fi

## Deployment

jobs:
  include:
    - stage: deploy
      if: type = push AND repo = sass/dart-sass AND branch = master AND tag =~ ^\d+\.\d+\.\d+([+-].*)?$
      script: skip # Don't run tests

      before_deploy:
      - rm -rf build/
      - pub run grinder package npm_package
      - export files_for_github=$(ls build/dart-sass-*)

      deploy:
        # Deploy standalone archives to GitHub releases.
        - provider: releases
          api_key:
            secure: qD09TCT4wbFlmF0Kglo+Rl8S5YfqHaUpNYMKdHX8mXIznN0txjCTTLvCzqLV7hfXlybUBkSHecZ7lW27MK3gGq0cMotF+2/iC6r8Y0XenndBDZn4fkuK5k9ROwZ8fdxst8/iSXLcg575p16iMCuEDeexOaZXl6fioL0+RNfiTgkm1cH/eP/M6qzrjwf2X3tlJ/2FECgYzwSBJFlcHiIfyDNAgH5CO+ghUVO+D3ms6l5RPN25+uh0ihRmWj+rIeZc15IQyFQ0hFQDxc3WpQBTGReDmvk/6Lo3dn0IdANbT12hOvqp9/r9fOn1UjljPkIjXXarrs7QDOjD7oeisEQn2CY8M0LLu9wQIBvpQxu1G7V+y4D+1hsIzgVfck8+Wz96Qlg0Alq/LJQN+G0BxP4QnPjs/Yi+iMANTnrqrl+9rfAcfOkvGthFFvrYKYvLOtvObd1PnCOJNC8pG3PeI8Rm5v5PLb+5Sphz2tpPIOR/xpV4Qe4HRzuU9WQkwOiBXDOZxS82sdN5pIJQssGSBW9tPpBuI20khfrZHpVeoqN1zb8/uZnWFdsHxd7keWGfJD4OQsQAiEqnSnKoyyGPh/iUeQfRqnIt00gJCcwkUpSHWTihFqAAgwdOtIU9WyhDf7QMV0tsNERF6c1FRUhAO6Hw2Lzz6iTLdFR98Un24lszk6s=
          file: "${files_for_github}"
          skip_cleanup: true

          # This is redundant with the "if" clause above, but according to
          # https://github.com/travis-ci/beta-features/issues/28#issuecomment-358705563
          # "if" resolution isn't totally solid yet.
          on: &deploy_on
            repo: sass/dart-sass
            tags: true

        # Deploy to npm, pub, and Homebrew.
        # TODO: Deploy to Chocolatey as well.
        - provider: script
          script: tool/deploy.sh
          on: *deploy_on
