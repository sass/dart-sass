name: Initialize
description: Check out Dart Sass and build the embedded protocol buffer.
inputs:
  github-token: {required: true}
  node-version: {required: false, default: 'lts/*'}
  dart-sdk: {required: false, default: stable}
  architecture: {required: false}
runs:
  using: composite
  steps:
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: "${{ inputs.dart-sdk }}"
        architecture: "${{ inputs.architecture }}"

    - uses: actions/setup-node@v4
      with:
        node-version: "${{ inputs.node-version }}"

    # See: https://github.com/dart-lang/sdk/issues/52266
    - run: Invoke-WebRequest https://pub.dev
      if: runner.os == 'Windows'
      shell: powershell

    # See: https://github.com/orgs/community/discussions/131594
    # The composite action requires an explict shell, but bash is not available on windows-arm64 runner.
    # For the following commands conditionally use bash or powershell based on the runner.os:
    - run: dart pub get
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}

    - run: npm install
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}

    - uses: bufbuild/buf-setup-action@v1.41.0
      with: {github_token: "${{ inputs.github-token }}"}

    # This composite action requires bash, but bash is not available on windows-arm64 runner.
    # Avoid running this composite action on non-PR, so that we can release on windows-arm64.
    - name: Check out the language repo
      if: github.event_name == 'pull_request'
      uses: sass/clone-linked-repo@v1
      with: {repo: sass/sass, path: build/language}

    # Git is not pre-installed on windows-arm64 runner, however actions/checkout support
    # downloading repo via GitHub API.
    - name: Check out the language repo
      if: github.event_name != 'pull_request'
      uses: actions/checkout@v4
      with: {repository: sass/sass, path: build/language}

    - name: Generate Dart from protobuf
      run: dart run grinder protobuf
      env: {UPDATE_SASS_SASS_REPO: false}
      shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}
