name: Build for linux

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    permissions:
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: docker.io/library/dart
            platform: linux/amd64
            target: linux-x64
          - image: docker.io/library/dart
            platform: linux/arm64
            target: linux-arm64
          - image: docker.io/library/dart
            platform: linux/arm/v7
            target: linux-arm
          - image: docker.io/library/dart
            platform: linux/riscv64
            target: linux-riscv64
          - image: ghcr.io/dart-musl/dart
            platform: linux/amd64
            target: linux-x64-musl
          - image: ghcr.io/dart-musl/dart
            platform: linux/arm64
            target: linux-arm64-musl
          - image: ghcr.io/dart-musl/dart
            platform: linux/arm/v7
            target: linux-arm-musl
          - image: ghcr.io/dart-musl/dart
            platform: linux/riscv64
            target: linux-riscv64-musl
          - image: ghcr.io/dart-android/dart
            platform: linux/amd64
            target: android-x64
          - image: ghcr.io/dart-android/dart
            platform: linux/arm64
            target: android-arm64
          - image: ghcr.io/dart-android/dart
            platform: linux/arm64
            target: android-arm
          - image: ghcr.io/dart-android/dart
            platform: linux/riscv64
            target: android-riscv64

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/util/initialize
        with: {github-token: "${{ github.token }}"}

      - name: Set up QEMU
        run: docker run --privileged --rm registry.fedoraproject.org/fedora-minimal /bin/sh -c "microdnf install --assumeyes --nodocs --setopt=install_weak_deps=False qemu-user-static systemd-udev && mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc && /usr/lib/systemd/systemd-binfmt --unregister && /usr/lib/systemd/systemd-binfmt"

      - name: Build
        if: matrix.image != 'ghcr.io/dart-android/dart'
        run: |
          docker run --rm -i \
                     --platform ${{ matrix.platform }} \
                     --volume "$PWD:$PWD" \
                     --workdir "$PWD" \
                     ${{ matrix.image }} <<'EOF'
          set -e
          dart pub get
          dart run grinder pkg-standalone-${{ matrix.target }}
          EOF

      - name: Build
        if: matrix.image == 'ghcr.io/dart-android/dart'
        run: |
          docker run --rm -i \
                     --privileged \
                     --platform ${{ matrix.platform }} \
                     --volume "$PWD:$PWD" \
                     --workdir "$PWD" \
                     ${{ matrix.image }} <<'EOF'
          set -e
          export DART_SDK=/system/${{ matrix.target != 'android-arm' && 'lib64' || 'lib' }}/dart
          export PATH=$DART_SDK/bin:$PATH
          dart pub get
          dart run grinder pkg-standalone-${{ matrix.target }}
          EOF

      - name: Generate artifact attestation
        if: github.ref_type == 'tag'
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: build/*.tar.gz

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: build/*.tar.gz
          if-no-files-found: error
          compression-level: 0
